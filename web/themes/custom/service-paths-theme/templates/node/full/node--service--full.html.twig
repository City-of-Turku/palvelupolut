{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}

{% set menu_items = [] %}
{% if content.field_description|render %}
	{% set menu_items = menu_items|merge([{
    title: content.field_description_heading|render|trim
            ? content.field_description_heading : 'Description'|t,
    url: '#pg-description',
    id: 'pg-description',
  }]) %}
{% endif %}
{% if content.field_requirements|render %}
	{% set menu_items = menu_items|merge([{
    title: content.field_requirements_heading|render|trim
            ? content.field_requirements_heading : 'Requirements'|t,
    url: '#pg-requirements',
    id: 'pg-requirements',
  }]) %}
{% endif %}
{% if content.field_user_instruction|render %}
	{% set menu_items = menu_items|merge([{
    title: content.field_user_instruction_heading|render|trim
            ? content.field_user_instruction_heading : 'User Instruction'|t,
    url: '#pg-instruction',
    id: 'pg-instruction',
  }]) %}
{% endif %}
{% if content.field_charge_info|render %}
  {% set menu_items = menu_items|merge([{
    title: content.field_charge_info_heading|render|trim
            ? content.field_charge_info_heading : 'Charge Information'|t,
    url: '#pg-charge',
    id: 'pg-charge',
  }]) %}
{% endif %}
{% for i in content.field_paragraphs['#items']|keys %}
  {% if node.field_paragraphs[i].entity.field_paragraph_heading.value %}
    {% set menu_items = menu_items|merge([{
      title: node.field_paragraphs[i].entity.field_paragraph_heading.value,
      url: '#pg' ~ node.field_paragraphs[i].entity.id(),
      id: 'pg' ~ node.field_paragraphs[i].entity.id(),
    }]) %}
  {% endif %}
{% endfor %}

{% set menu_items = menu_items|merge([{
  title: 'Service Channels'|t,
  url: '#pg-channels',
  id: 'pg-channels',
}]) %}



{% embed "@templates/page/page-content.twig" with {
  page_sidebar: false,
} %}
  {% block page_content_pre_content %}
    {{ title_prefix }}
    {{ title_suffix }}

    {% embed "@molecules/hero/hero.twig" with {
      hero__modifiers: hero__modifiers|default(["light"]),
      hero__title: label,
      hero__lead_text: node.field_description.summary,
      with_image: content.field_lead_image|render,
    } %}
      {% if content.field_lead_image|render %}
        {% block hero_image %}
          {{ content.field_lead_image }}
        {% endblock %}
      {% endif %}
    {% endembed %}
  {% endblock %}

  {% block page_content %}

    {% include "@molecules/navigation/anchor-menu/anchor-menu.twig" with {
      anchor_menu__items: menu_items,
    } %}

    {% if content.field_description|render %}
      <div id="pg-description" class="page-content__content-section">
        {% include '@atoms/text/heading/heading.twig' with {
          heading: content.field_description_heading|render|trim
                    ? content.field_description_heading : 'Description'|t,
          heading__level: '2',
        } %}
        {{ content.field_description }}
        {{ content.field_description_links }}
      </div>
    {% endif %}
    {% if content.field_requirements|render %}
      <div id="pg-requirements" class="page-content__content-section">
        {% include '@atoms/text/heading/heading.twig' with {
          heading: content.field_requirements_heading|render|trim
                    ? content.field_requirements_heading : 'Requirements'|t,
          heading__level: '2',
        } %}
        {{ content.field_requirements }}
        {{ content.field_requirements_links }}
      </div>
    {% endif %}
    {% if content.field_user_instruction|render %}
      <div id="pg-instruction" class="page-content__content-section">
        {% include '@atoms/text/heading/heading.twig' with {
          heading: content.field_user_instruction_heading|render|trim
                ? content.field_user_instruction_heading : 'User Instruction'|t,
          heading__level: '2',
        } %}
        {{ content.field_user_instruction }}
        {{ content.field_user_instruction_links }}
      </div>
    {% endif %}
    {% if content.field_charge_info|render %}
      <div id="pg-charge" class="page-content__content-section">
        {% include '@atoms/text/heading/heading.twig' with {
          heading: content.field_charge_info_heading|render|trim
                  ? content.field_charge_info_heading : 'Charge Information'|t,
          heading__level: '2',
        } %}
        {{ content.field_charge_info }}
        {{ content.field_charge_info_links }}
      </div>
    {% endif %}

    {{ content.field_paragraphs }}

  {% endblock %}

  {% block page_sidebar_post_content %}
    {{ content.field_paragraphs_sidebar }}
  {% endblock %}

  {% block page_content_post_content %}
    {% set section_contact_cards__base_class = section_contact_cards__base_class|default("section-contact-cards") %}
    {% set section_contact_cards__modifiers = section_contact_cards__modifiers|default(["vertical"]) %}

    <div id="pg-channels" {{ bem(section_contact_cards__base_class, section_contact_cards__modifiers) }}>
      {{ content.service_channels_embed }}
    </div>

  {% endblock %}

{% endembed %}
