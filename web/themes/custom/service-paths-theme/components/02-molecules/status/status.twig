{#
/**
 * @file
 * Theme override for status messages.
 *
 * Displays status, error, and warning messages, grouped by type.
 *
 * An invisible heading identifies the messages for assistive technology.
 * Sighted users see a colored box. See http://www.w3.org/TR/WCAG-TECHS/H69.html
 * for info.
 *
 * Add an ARIA label to the contentinfo area so that assistive technology
 * user agents will better describe this landmark.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - status_headings: List of all status types.
 * - display: (optional) May have a value of 'status' or 'error' when only
 *   displaying messages of that specific type.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 * - container_classes: HTML classes for the status container element.
 */
#}
{% set status__base_class = 'status' %}
{% set status_type = {
  error: 'Error message'|t,
  warning: 'Warning message'|t,
  status: 'Status message'|t
} %}

{% for type, messages in message_list %}
  {% set role = (type == 'error') ? 'alert' : 'status' %}

  {# Building list element before container to not pollute bem()-results
     with css-classes from attributes #}
  {%  set list %}
    <ul {{ bem('list', [], status__base_class)}}>
      {% for message in messages %}
        <li {{ bem(status__base_class, [type])}}>{{ message }}</li>
      {% endfor %}
    </ul>
  {% endset %}

  <div role="{{ role }}" aria-label="{{ status_type[type] }}"{{ attributes.addClass(container_classes)|without('aria-label') }}>
    {{ list }}
  </div>
{% endfor %}
