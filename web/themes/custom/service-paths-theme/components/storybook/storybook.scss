// Import variables.
@use 'sass:math';
@import '../00-base/**/*.scss';

:root {
  --sg-pattern-color: #656565;
}

// These styles only affect the colors "Usage" page in the component library
.cl-colors {
  padding: 1rem;
}

.cl-colors__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 2rem;
  padding: 0;
}

.cl-colors__item {
  list-style: none;
  padding: 1rem 2rem;
  transition: all 0.4s;
  flex: 1 1 20%;
  min-width: 250px;
  min-height: 150px;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}

// Dynamically set swatch text color based on the lightness of the background color
@function set-color(
  $color,
  $text-primary: text,
  $text-secondary: text-inverse
) {
  @if (lightness($color) > 45) {
    @return color($text-primary);
  } @else {
    @return color($text-secondary);
  }
}

// Style default color swatches
@each $name, $color in $defaultColors {
  .cl-colors__item--default {
    &-#{$name} {
      background-color: color($name);
      color: set-color($color);
    }
  }
}

.sb-story-label {
  margin: 3.5rem 0 1.5rem -1rem;
  font-family: $font-family--base;
  font-size: $font-size--small-1;
  font-weight: 300;
  letter-spacing: $letter-spacing--wide;
  color: var(--sg-pattern-color);
}

.sb-images {
  display: flex;
  flex-wrap: wrap;

  &__item {
    border: 0.0625rem solid color(border-primary);
    margin: space(math.div(1, 4));
  }

  &__image {
    width: 200px;
    height: 200px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 80%;

    &--small {
      background-size: 35%;
    }
  }

  .fontawesome-icon,
  .icon {
    height: 100px;
    width: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: space();

    @media (prefers-color-scheme: dark) {
      fill: color(accent);
    }
  }

  pre {
    background-color: color(background-section);
    font-size: 0.8rem;
    margin: 0;
    text-align: center;
  }
}

// Motion demo UI.
.motion {
  padding: 0 1rem;
}

.motion__grid {
  @media (min-width: 920px) {
    display: flex;
    flex-wrap: wrap;
  }
}

.motion__grid-item {
  @media (min-width: 920px) {
    margin-bottom: 1rem;
    margin-right: 1rem;
    width: 49%;

    &:nth-child(2n) {
      margin-right: 0;
    }
  }
}

.demo-motion {
  background-color: color(background-light);
  border-radius: 0.125rem;
  cursor: pointer;
  padding: 3rem;
  text-align: center;

  &::before {
    content: 'Duration: #{$transition-duration-base}';
    display: block;
  }

  &::after {
    content: 'Timing Function: #{$transition-timing-function-base}';
  }

  span {
    display: block;
    margin: 0.25rem;
  }
}

.demo-motion--fade {
  @include transition;

  &:hover {
    background-color: color(accent);
    color: color(background-section);
  }
}

.demo-motion--slide-up {
  @include transition(transform, 0.4s, ease-in);

  &::before {
    content: 'Duration: 0.4s';
    display: block;
  }

  &::after {
    content: 'Timing Function: ease-in';
  }

  &:hover {
    transform: translateY(-10px);
  }
}

.demo-motion--slide-down {
  @include transition(transform, 0.2s, linear);

  &::before {
    content: 'Duration: 0.2s';
    display: block;
  }

  &::after {
    content: 'Timing Function: linear';
  }

  &:hover {
    transform: translateY(10px);
  }
}

.demo-motion--expand {
  @include transition(transform, 0.3s, cubic-bezier(0.17, 0.67, 0.83, 0.67));

  &::before {
    content: 'Duration: 0.3s';
    display: block;
  }

  &::after {
    content: 'Timing Function: cubic-bezier(.17,.67,.83,.67)';
  }

  &:hover {
    transform: scale(1.03);
  }
}
