
# Values in this file override the default values of our helm chart.
#
# See https://github.com/wunderio/charts/blob/master/drupal/values.yaml
# for all possible options.

# Enable autoscaling for production.
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5

# Don't delay the production deployment process to create the reference data.
referenceData:
  updateAfterDeployment: false

# Enable daily backups.
backup:
  enabled: true

php:
  # Reserve more resources for our PHP containerss.
  resources:
    requests:
      cpu: 200m
      memory: 256M

  # Don't show errors in production.
  errorLevel: "hide"

  # Static IP is required for SMTP, migration cronjobs & cURL's.
  nodeSelector:
    cloud.google.com/gke-nodepool: static-ip

  cron:
    ptvcron1:
      schedule: '0 1 * * *'
      command: |
        drush migrate:reset-status services;
        drush migrate:import services;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M
    ptvcron2:
      schedule: '10 1 * * *'
      command: |
        drush migrate:reset-status services_translations;
        drush migrate:import services_translations --update;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M
    ptvcron3:
      schedule: '0 3 * * *'
      command: |
        drush migrate:reset-status service_channels;
        drush migrate:import service_channels;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M
    ptvcron4:
      schedule: '10 3 * * *'
      command: |
        drush migrate:reset-status service_channels_translations;
        drush migrate:import service_channels_translations --update;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M

nginx:
  resources:
    requests:
      cpu: 50m
      memory: 50M
  redirects:
    - description: 'Redirect all traffic to without www.'
      from: '~://www.palvelupolut.fi'
      to:  https://palvelupolut.fi$request_uri
    # - description: 'Redirect all traffic from internal production branch to prod.'
    #   from: '~://palvelupolut.finland.wdr.io'
    #   to:  https://palvelupolut.fi$request_uri

exposeDomains:
  palvelupolut-io:
    hostname: palvelupolut.finland.wdr.io
  palvelupolut-fi:
    hostname: palvelupolut.fi
  wwww-palvelupolut-fi:
    hostname: www.palvelupolut.fi

mariadb:
  master:
    persistence:
      # Database storage disk space allocation
      # Request assistance from ops team after changing this on existing deployment.
      size: 10G
    resources:
      requests:
        cpu: 250m
        memory: 500Mi
      limits:
        cpu: 1000m
        memory: 750Mi
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=256M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_unicode_ci
      transaction-isolation=READ-COMMITTED
      # Default max_connections value is 150.
      # Each active connection consumes approx. 19-20MB of memory.
      # Consider adding additional memory for production requests/limits when scaling up.
      max_connections=200
      # Set innodb_buffer_pool_size to 70/80% of resources.requests.memory (500Mi).
      innodb_buffer_pool_size=375Mi
      innodb_log_buffer_size=8M
      # Set innodb_log_file_size to 12.5% of innodb_buffer_pool_size (47Mi is 12.5% of 375Mi).
      innodb_log_file_size=47Mi
      innodb_lock_wait_timeout=120
      innodb_open_files=49152
      innodb_flush_log_at_trx_commit=2
      innodb_flush_method=O_DIRECT
      table_open_cache=4000
      table_definition_cache=1000
      back_log=2048
      tmp_table_size=64M
      max_heap_table_size=32M
      join_buffer_size=2M
      # have_query_cache=NO
      performance_schema=1
      innodb_write_io_threads=16
      innodb_use_native_aio=0
      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin
      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

varnish:
  enabled: true

mailhog:
  enabled: false

smtp:
  enabled: true
  address: smtp.turku.fi:587
  starttls: "YES"

# Fastly WAF.
signalsciences:
  enabled: true

memcached:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 1Gi
    limits:
      cpu: 200m
      memory: 2Gi
  arguments:
    - /run.sh
    # MaxMemoryLimit, this should be less than the resources.limits.memory, or memcached will crash.
    - -m 1536
    # MaxItemSize
    - -I 16M
