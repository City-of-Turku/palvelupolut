
# Values in this file override the default values of our helm chart.
#
# See https://github.com/wunderio/charts/blob/master/drupal/values.yaml
# for all possible options.

# Enable autoscaling for production.
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5

# Don't delay the production deployment process to create the reference data.
referenceData:
  updateAfterDeployment: false

# Enable daily backups.
backup:
  enabled: true

php:
  # Reserve more resources for our PHP containerss.
  resources:
    requests:
      cpu: 200m
      memory: 256M

  # Don't show errors in production.
  errorLevel: "hide"

  # Static IP is required for SMTP, migration cronjobs & cURL's.
  nodeSelector:
    cloud.google.com/gke-nodepool: static-ip

  cron:
    ptvcron1:
      schedule: '0 1 * * *'
      command: |
        drush migrate:reset-status services;
        drush migrate:import services;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M
    ptvcron2:
      schedule: '10 1 * * *'
      command: |
        drush migrate:reset-status services_translations;
        drush migrate:import services_translations --update;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M
    ptvcron3:
      schedule: '0 3 * * *'
      command: |
        drush migrate:reset-status service_channels;
        drush migrate:import service_channels;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M
    ptvcron4:
      schedule: '10 3 * * *'
      command: |
        drush migrate:reset-status service_channels_translations;
        drush migrate:import service_channels_translations --update;
      nodeSelector:
        cloud.google.com/gke-nodepool: static-ip
      resources:
        requests:
          memory: 512M
          cpu: 1000m
        limits:
          memory: 512M

nginx:
  resources:
    requests:
      cpu: 50m
      memory: 50M
  basicauth:
    enabled: false
  redirects:
    - description: 'Redirect all traffic to without www.'
      from: '~://www.palvelupolut.fi'
      to:  https://palvelupolut.fi$request_uri
    # - description: 'Redirect all traffic from internal production branch to prod.'
    #   from: '~://palvelupolut.finland.wdr.io'
    #   to:  https://palvelupolut.fi$request_uri

exposeDomains:
  palvelupolut-io:
    hostname: palvelupolut.finland.wdr.io
  palvelupolut-fi:
    hostname: palvelupolut.fi
  wwww-palvelupolut-fi:
    hostname: www.palvelupolut.fi

mariadb:
  master:
    persistence:
      size: 10G

varnish:
  enabled: true

mailhog:
  enabled: false

smtp:
  enabled: true
  address: smtp.turku.fi:587
  starttls: "YES"

# Fastly WAF.
signalsciences:
  enabled: true

memcached:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 1Gi
    limits:
      cpu: 200m
      memory: 2Gi
  arguments:
    - /run.sh
    # MaxMemoryLimit, this should be less than the resources.limits.memory, or memcached will crash.
    - -m 1536
    # MaxItemSize
    - -I 16M
